{"version":3,"sources":["app/config.coffee","app/controllers/page/home.coffee","app/helpers.coffee","app/initialize.coffee","app/routes.coffee","app/start.coffee","app/validators.coffee","app/views/hello.eco","core/bootstrap.coffee","core/controller.coffee","core/view.coffee"],"names":[],"mappings":"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","file":"../public/javascripts/app.js","sourcesContent":["#--------------------------------------------------------------------------\n# Config\n#--------------------------------------------------------------------------\n#\n# Sometimes you need to put some configuration variables for your project,\n# here it's the right place for that !\n# \n# @example\n#   \n#   Config = require 'config'\n#   console.log Config.app.name\n#   \n#   \n##\n\nmodule.exports = \n\n  # Example\n  app: \n    name: 'My Gotham Application'\n    version: 0.1","Controller = require 'core/controller'\n\nclass Home extends Controller\n\n  el:\n    navButton: '[data-toggle=animate-nav-button]'\n\n  ##\n  # Before\n  #\n  # Executed before the run action. You can use\n  # @stop() in this method to stop the execution\n  # of the controller\n  #\n  ##\n  before: (params) ->\n\n\n  ##\n  # Run\n  #\n  # The main entry of the controller.\n  # Your code start here\n  #\n  ##\n  run: (params) ->\n\n\n    @on 'mouseenter', @el.navButton, @hoverButton\n\n  hoverButton: ->\n\n    $(this).addClass('animated slideInUp')\n\n\n\nmodule.exports = Home\n","#--------------------------------------------------------------------------\n# Helpers\n#--------------------------------------------------------------------------\n#\n# If you need to create some functions to use in your application, you are\n# in the right place !\n# \n# Gotham uses lo-dash and the concept of mixins.\n# \n# @see https://lodash.com/docs#mixin\n##\n\n##\n# Example \n# \n# Check if the user is batman\n# \n# @param [string] Name of the user\n##\n_.mixin isBatman: (name) ->\n  \n  if name.toLowerCase() is \"batman\"\n    return true\n\n  return false\n","#--------------------------------------------------------------------------\n# Initialize\n#--------------------------------------------------------------------------\n#\n# It's the main entry of your gotham application. We will require the\n# bootstrap file and run gotham.\n##\nBootstrap = require 'core/bootstrap'\n\n$('#main').smoothState()\n\n# Hey sir, is the document ready ?\n$ ->\n\n  # Yep ! We will run gotham !\n  bootstrap = new Bootstrap\n\n    # We set the browser's request\n    request: window.location.pathname\n\n  bootstrap.run()\n","#--------------------------------------------------------------------------\n# Routes\n#--------------------------------------------------------------------------\n#\n# All routes of your application.\n##\n\nmodule.exports = (route) ->\n\n\n  route.match '/', 'page.home'\n\n  #--------------------------------------------------------------------------\n  # Example of a simple route\n  #--------------------------------------------------------------------------\n  #\n  # route.match '/users', ->\n  #\n  #   console.log \"Here the list of all the users\"\n  #\n  # If the url is like www.domain.com/users, gotham will\n  # display a log.\n  ##\n\n  #--------------------------------------------------------------------------\n  # Example of a simple route with a controller\n  #--------------------------------------------------------------------------\n  #\n  # route.match '/users', 'users#index'\n  #\n  # If the url is like www.domain.com/users, gotham will require\n  # the run the controller \"controllers/users/index.coffee\"\n  ##\n\n  #--------------------------------------------------------------------------\n  # Example of a route with a variable\n  #--------------------------------------------------------------------------\n  #\n  # route.match '/users/:id', 'users#show'\n  #\n  # If the url is like www.domain.com/users/22 or www.domain.com/users/peter, etc ..\n  # gotham will require the file controllers/users/show.coffee\n  ##\n\n  #--------------------------------------------------------------------------\n  # Example of a route with a constraint\n  #--------------------------------------------------------------------------\n  # route.match '/users/:id/edit', 'users#edit', (params) ->\n  #   if params.id is 22\n  #     return false\n  #   else\n  #     return true\n  #\n  # If the url is like www.domain.com/users/22/edit\n  # gotham will not run the controller controllers/users/edit.coffee\n  ##\n\n\n\n","#--------------------------------------------------------------------------\n# Start\n#--------------------------------------------------------------------------\n#\n# Gotham will run after that file the router system. It's the right place\n# to put some code to execute globally like the init of jQuery plugins, etc.\n##\n$('[data-toggle=tooltip]').tooltipster()\n","##\n# Errors\n#\n# \n##\nValidator.errors\n\n##\n# Attributes\n##\nValidator.attributes\n","var __templateData = function (__obj) {\n  if (!__obj) __obj = {};\n  var __out = [], __capture = function(callback) {\n    var out = __out, result;\n    __out = [];\n    callback.call(this);\n    result = __out.join('');\n    __out = out;\n    return __safe(result);\n  }, __sanitize = function(value) {\n    if (value && value.ecoSafe) {\n      return value;\n    } else if (typeof value !== 'undefined' && value != null) {\n      return __escape(value);\n    } else {\n      return '';\n    }\n  }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;\n  __safe = __obj.safe = function(value) {\n    if (value && value.ecoSafe) {\n      return value;\n    } else {\n      if (!(typeof value !== 'undefined' && value != null)) value = '';\n      var result = new String(value);\n      result.ecoSafe = true;\n      return result;\n    }\n  };\n  if (!__escape) {\n    __escape = __obj.escape = function(value) {\n      return ('' + value)\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;');\n    };\n  }\n  (function() {\n    (function() {\n      __out.push('<style>\\n  @import url(http://fonts.googleapis.com/css?family=Lato:300,700);\\n\\n  body {\\n    margin:0;\\n    font-family:\\'Lato\\', sans-serif;\\n    text-align:center;\\n    color: #999;\\n    height: 100%;\\n    width: 100%;\\n  }\\n\\n  .gothamjs-welcome {\\n    position: relative;\\n    margin-top: 15%;\\n    text-align: center;\\n  }\\n\\n  .gothamjs-welcome h3 {\\n    font-size: 32px;\\n    font-weight: 300;\\n  }\\n\\n  .gothamjs-welcome h1 {\\n    font-size: 60px;\\n    font-weight: 700;\\n  }\\n\\n  .gothamjs-welcome p {\\n    font-size: 16px;\\n    margin-bottom: 3em;\\n  }\\n\\n  .gothamjs-welcome a {\\n    background-color: #02baf2;\\n    color: #fff;\\n    border-color: #02baf2;\\n    font-weight: 300;\\n    cursor: pointer;\\n    text-decoration: none !important;\\n    -ms-touch-action: manipulation;\\n    touch-action: manipulation;\\n    cursor: pointer;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n    user-select: none;\\n    border-radius: 5px;\\n    border: 1px solid transparent;\\n    font-size: 21px;\\n    padding: 9.6px 19.2px;\\n  }\\n\\n\\n</style>\\n\\n<div class=\"gothamjs-welcome\">\\n\\n  <h1>');\n    \n      __out.push(this.framework);\n    \n      __out.push('</h1>\\n  <h3>You just loaded Gotham, it\\'s an impressive start.</h3>\\n  <p>I\\'m executed by `start.coffee` and you can find me in `views/hello.hbs`</p>\\n  <a>Documentation</a>\\n</div>\\n');\n    \n    }).call(this);\n    \n  }).call(__obj);\n  __obj.safe = __objSafe, __obj.escape = __escape;\n  return __out.join('');\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","class Bootstrap\n\n  constructor: (options) ->\n\n    @options = options\n\n  run: ->\n\n    # Load lo-dash helpers\n    require 'helpers'\n\n    # Load start\n    require 'start'\n\n    # Init router\n    router = new Router(@options.request)\n\n    # Load routes\n    require('routes')(router)\n\n    # Run router\n    router.run()\n\n    # Check response\n    if router.passes()\n\n      # Stock response\n      response = router.response()\n\n      # Stock params\n      params = response.params\n\n      # Check if we need to call directly the callback\n      if _.isFunction(response.result)\n\n        # Call it !\n        response.result(params)\n\n      else\n\n        # Convert string to the path\n        path = @_formatPath(response.result)\n\n        # Require controller\n        controller = require 'controllers/' + path\n\n        # Invoke\n        controller = new controller()\n\n        # Check if we have a method before\n        if controller['before']?\n\n          # Run the before method\n          controller.before(params)\n\n        unless controller._gothamStop\n          controller.run(params)\n\n\n  _formatPath: (str) ->\n\n    str.split('.').join('/').split('#').join('/')\n\n\n\n\nmodule.exports = Bootstrap\n","##\n# Controller\n# \n# Basic controller structure.\n##\nclass Controller\n\n  # Flag to know if we must run or not the controller\n  # It's linked with the before() method.\n  _gothamStop: false\n\n  ##\n  # Constructor\n  #\n  # The constructor\n  #\n  ##\n  constructor: ->\n\n  ##\n  # Stop\n  #\n  # If we call this method in the before method,\n  # it will not execute the run() method\n  #\n  ##\n  stop: ->\n\n    @_gothamStop = true\n\n  ##\n  # Log\n  #\n  # Shortcut to display a console.log\n  #\n  # @param [Mixed] Value to display\n  # \n  ##\n  log: (value) ->\n\n    console.log(value)\n\n  ##\n  # On\n  #\n  # Shortcut to create a jquery \"on\" event\n  #\n  # @param [String] Trigger to listen (Ex. click)\n  # @param [String] The selector to attach\n  # @param [Function] The callback\n  # \n  ##\n  on: (trigger, selector, handler) ->\n\n    $(selector).on trigger, handler\n\n  ##\n  # Off\n  #\n  # Shortcut to create a jquery \"off\" event\n  #\n  # @param [String] Trigger to shutdown (Ex. click)\n  # @param [String] The selector attached\n  # @param [Function] The handler\n  # \n  ##\n  off: (trigger, selector, handler) ->\n\n    $(selector).off trigger, handler\n\n  ##\n  # Delayed\n  #\n  # Like \"on\" jquery event but listen new elements\n  # added in the page\n  #\n  # @param [String] Trigger to listen (Ex. click)\n  # @param [String] The selector to attach\n  # @param [Function] The callback\n  # \n  ##\n  delayed: (trigger, selector, handler) ->\n\n    $(document).on trigger, selector, handler\n\n\nmodule.exports = Controller\n","##\n# View\n#\n# Micro-Facade for Handlebars.\n##\nclass View\n\n  ##\n  # Constructor\n  #\n  # The constructor\n  #\n  ##\n  constructor: ->\n\n  ##\n  # Render\n  #\n  # Render a template\n  #\n  # @param [String] Template to compile\n  # @param [Object] Datas to compile with the template\n  #\n  ##\n  render: (template, datas) ->\n\n    template = template.split('.').join('/')\n\n    template = require 'views/' + template\n\n    return template(datas)\n\nmodule.exports = View\n"]}